{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "subscriber",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "unverifiedReport",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "quoteAddress",
						"type": "address"
					}
				],
				"name": "getFeeAndReward",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "assetAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							}
						],
						"internalType": "struct Common.Asset",
						"name": "",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "assetAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							}
						],
						"internalType": "struct Common.Asset",
						"name": "",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "i_linkAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "i_nativeAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "i_rewardManager",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getFeeAndReward(address,bytes,address)": {
					"params": {
						"quoteAddress": "The payment token address used for quoting fees and rewards.",
						"subscriber": "The address attempting to verify the report. A discount is applied if this address is recognized as a subscriber.",
						"unverifiedReport": "The report data awaiting verification. The content of this report is used to determine the base fee and reward, before considering subscriber discounts."
					},
					"returns": {
						"_0": "fee The fee assessed for verifying the report, with subscriber discounts applied where applicable.",
						"_1": "reward The reward allocated to the caller for successfully verifying the report.",
						"_2": "totalDiscount The total discount amount deducted from the fee for subscribers"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getFeeAndReward(address,bytes,address)": {
					"notice": "Calculates the fee and reward associated with verifying a report, including discounts for subscribers. This function assesses the fee and reward for report verification, applying a discount for recognized subscriber addresses."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"GettingStarted/StreamsUpkeep.sol": "IFeeManager"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts@1.2.0/src/v0.8/automation/interfaces/ILogAutomation.sol": {
			"keccak256": "0x6efb298ce2d8d406fa48686a169ea7e50192878e25d3a2f9c102cfdeae340e34",
			"license": "MIT",
			"urls": [
				"bzz-raw://4de346eeefaef7c0655dbb22e7e3d75df163ede488d578f101d70ab03cebc1ec",
				"dweb:/ipfs/QmYVrPMe5GVEUeTEZVFsubNkqXLUjYToNb8jAXfKLsh2Ni"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/automation/interfaces/StreamsLookupCompatibleInterface.sol": {
			"keccak256": "0x425b2fbd5157912befe76769fa3556ebd9b3f1fd292e1df52229923ef679aee0",
			"license": "MIT",
			"urls": [
				"bzz-raw://73c5344cbe6d410e8b19a59e7ca6fbd130431c60aee9306b018539b6b1b3c8b9",
				"dweb:/ipfs/QmWG2QMTs9CCxEzMiF1fZgzUZQZJ6eGQ4pTQawnKpwC6dd"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/llo-feeds/interfaces/IRewardManager.sol": {
			"keccak256": "0x46ba26fa45d130ecc068bd7121bb0795721158b63bc5ac7caa4c86c8039778a9",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc892f4c525638eab677cb6edfeb99f8dbd4bed7a60855c5a81390e2193ff473",
				"dweb:/ipfs/QmRQYSbVzS8hBkgosoKcZ1mV1q8pbgnbodgZ1vPg9f3MRN"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/llo-feeds/interfaces/IVerifierFeeManager.sol": {
			"keccak256": "0x79cbc6d508196d9bc3fa33b6a76cfd0a4d45bb23f4e4a9b5997dc63685953bd2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f15fa5491d64989a8fa1c9746826a12bd2d942e0a0a7651bb8a4664c87a7254",
				"dweb:/ipfs/QmXAJAJid9UEtUQGKchV6xksQM91YFsZebvJTBcWGLwZnh"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/llo-feeds/libraries/Common.sol": {
			"keccak256": "0x01180c94521f35663601e1baa7098d951753150b696ebfd1316c592e8560f7cc",
			"license": "MIT",
			"urls": [
				"bzz-raw://332b72c74bf17f941fcc43bbd5d95049ef7bcaec4d2bdc938581a43a6a81cda7",
				"dweb:/ipfs/QmRtpihwWDK74huCzRgm1T6GcxfDjAFyV82WgPF9cZBYT5"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x34568ee847aaa6b80e18743f8e216a60420c201364cff3b14965835b92681831",
			"license": "MIT",
			"urls": [
				"bzz-raw://4e4000df7513871b3e8f456f0da0dc3550a72dc010867fd49ab49e8b4d08a7bc",
				"dweb:/ipfs/QmQCLsQehJCcuc5QRCqEdCogXTdnyhvLzkvs7c3qdNULQV"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x72ada0b71bd2fcd32e67c29cf1f455c936cd565f69985c60f21eef2a0d526730",
			"license": "MIT",
			"urls": [
				"bzz-raw://31bd5ba71f2e22bff7a5019686abce1a1a2707246657b2c22b9cc56d6282b616",
				"dweb:/ipfs/QmUZUhVHNa9ZW9TxR7jCnpNdBhBWTf1ik1x6LBEkbxhPT3"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f",
			"license": "MIT",
			"urls": [
				"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2",
				"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu"
			]
		},
		"@chainlink/contracts@1.2.0/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244",
			"license": "MIT",
			"urls": [
				"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d",
				"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"
			]
		},
		"GettingStarted/StreamsUpkeep.sol": {
			"keccak256": "0xd67f3d09f874fe03179a691db3991e4f3d9e07dd5b8570a68ed983d04e297f34",
			"license": "MIT",
			"urls": [
				"bzz-raw://f9e496674a8e62346d11d8636803f0f6dff027635b6990af05e113bbacbdad26",
				"dweb:/ipfs/QmTHRShSE2vaGzhUAccvFiwnFUr17dtMMphTd7KzCbAWka"
			]
		}
	},
	"version": 1
}